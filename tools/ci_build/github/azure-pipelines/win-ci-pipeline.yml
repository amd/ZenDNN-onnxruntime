# *******************************************************************************
# Modifications Copyright (c) 2023 Advanced Micro Devices, Inc. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# ********************************************************************************

parameters:
- name: RunOnnxRuntimeTests
  displayName: Run Tests?
  type: boolean
  default: true

stages:
- stage: x64_debug
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'Debug'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --build_java --build_nodejs --build_wheel --disable_memleak_checker
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_debug
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        isTraining: false
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win-CPU-2019'

- stage: x64_release
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        # Compare to our Nuget packaging pipeline, this job has "--build_wheel" but doesn't have "--enable_lto --disable_rtti --use_telemetry  --enable_wcos"
        # Python bindings use typeid so I can't disable RTTI here. If it causes a problem, we will need to split this job to two jobs.
        additionalBuildFlags: --build_wheel --build_java --build_nodejs
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        isTraining: false
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win-CPU-2019'

- stage: x64_release_dnnl
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --build_wheel --use_dnnl --build_java
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        isTraining: false
        ORT_EP_NAME: DNNL
        GenerateDocumentation: false
        WITH_CACHE: true
        # Intel EPs require Intel CPUs
        MachinePool: 'Win-CPU-2019'

- stage: x64_release_zendnn
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        UseOmp: ''
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --build_wheel --use_zendnn --build_java
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        isTraining: false
        ORT_EP_NAME: ZENDNN
        GenerateDocumentation: false
        WITH_CACHE: true
        # Intel EPs require Intel CPUs
        MachinePool: 'Win-CPU-2019'

# Tests doesn't work on AMD CPUs
- stage: x64_release_xnnpack
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --build_wheel --use_xnnpack
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release
        RunOnnxRuntimeTests: false
        RunStaticCodeAnalysis: false
        isTraining: false
        ORT_EP_NAME: XNNPACK
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win-CPU-2019'

- stage: x64_release_winml
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --use_winml --enable_wcos --disable_rtti
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release_winml
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        # WinML has many warnings
        RunStaticCodeAnalysis: false
        EnablePython: false
        isTraining: false
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win-CPU-2019'

- stage: x86_release
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env_x86.bat
        buildArch: x86
        additionalBuildFlags: --build_wheel
        msbuildPlatform: Win32
        isX86: true
        job_name_suffix: x86_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        isTraining: false
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win-CPU-2019'

- stage: training_x64_debug
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'Debug'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --enable_training --build_wheel --disable_memleak_checker
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: training_x64_debug
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        isTraining: true
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win2019-CPU-training'

- stage: training_x64_release
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --enable_training --build_wheel
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: training_x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: true
        isTraining: true
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win2019-CPU-training-AMD'

- stage: ort_training_apis_x64_release
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env.bat
        buildArch: x64
        additionalBuildFlags: --enable_training_apis
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: ort_training_apis_x64_release
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        EnablePython: false
        isTraining: true
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win2019-CPU-training-AMD'

- stage: x64_release_azure
  dependsOn: []
  jobs:
    - template: templates/win-ci-vs-2019.yml
      parameters:
        BuildConfig: 'RelWithDebInfo'
        EnvSetupScript: setup_env_azure.bat
        buildArch: x64
        additionalBuildFlags: --use_azure --use_lock_free_queue
        msbuildPlatform: x64
        isX86: false
        job_name_suffix: x64_release_azure
        RunOnnxRuntimeTests: ${{ parameters.RunOnnxRuntimeTests }}
        RunStaticCodeAnalysis: false
        EnablePython: false
        isTraining: false
        ORT_EP_NAME: CPU
        GenerateDocumentation: false
        WITH_CACHE: true
        MachinePool: 'onnxruntime-Win-CPU-2019'